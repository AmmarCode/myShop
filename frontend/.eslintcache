[{"/home/ammar/Desktop/CS50/myShop/frontend/src/index.js":"1","/home/ammar/Desktop/CS50/myShop/frontend/src/App.js":"2","/home/ammar/Desktop/CS50/myShop/frontend/src/reportWebVitals.js":"3","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/HomeScreen.js":"4","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Header.js":"5","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Footer.js":"6","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Product.js":"7","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Rating.js":"8","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProductScreen.js":"9","/home/ammar/Desktop/CS50/myShop/frontend/src/store.js":"10","/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/productReducers.js":"11","/home/ammar/Desktop/CS50/myShop/frontend/src/constants/productConstants.js":"12","/home/ammar/Desktop/CS50/myShop/frontend/src/actions/productActions.js":"13","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Loading.js":"14","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Message.js":"15","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/CartScreen.js":"16","/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/cartReducers.js":"17","/home/ammar/Desktop/CS50/myShop/frontend/src/constants/cartConstants.js":"18","/home/ammar/Desktop/CS50/myShop/frontend/src/actions/cartActions.js":"19","/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/userReducers.js":"20","/home/ammar/Desktop/CS50/myShop/frontend/src/constants/userConstants.js":"21","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/LoginScreen.js":"22","/home/ammar/Desktop/CS50/myShop/frontend/src/actions/userActions.js":"23","/home/ammar/Desktop/CS50/myShop/frontend/src/components/FormContainer.js":"24","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/RegisterScreen.js":"25","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProfileScreen.js":"26","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ShippingScreen.js":"27","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/PaymentScreen.js":"28","/home/ammar/Desktop/CS50/myShop/frontend/src/components/CheckoutSteps.js":"29","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/PlaceOrderScreen.js":"30","/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/orderReducers.js":"31","/home/ammar/Desktop/CS50/myShop/frontend/src/constants/orderConstants.js":"32","/home/ammar/Desktop/CS50/myShop/frontend/src/actions/orderActions.js":"33","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/OrderScreen.js":"34","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/UserListScreen.js":"35","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/UserEditScreen.js":"36","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProductListScreen.js":"37","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Paginate.js":"38","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProductEditScreen.js":"39","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/OrderListScreen.js":"40","/home/ammar/Desktop/CS50/myShop/frontend/src/components/ProductCarousel.js":"41"},{"size":597,"mtime":1645927084982,"results":"42","hashOfConfig":"43"},{"size":2216,"mtime":1647218619330,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1640108773474,"results":"45","hashOfConfig":"43"},{"size":1508,"mtime":1647273431503,"results":"46","hashOfConfig":"43"},{"size":3499,"mtime":1647273165025,"results":"47","hashOfConfig":"43"},{"size":290,"mtime":1647208923540,"results":"48","hashOfConfig":"43"},{"size":962,"mtime":1647275415299,"results":"49","hashOfConfig":"43"},{"size":1490,"mtime":1647261473409,"results":"50","hashOfConfig":"43"},{"size":7998,"mtime":1647264246570,"results":"51","hashOfConfig":"43"},{"size":2343,"mtime":1647262567733,"results":"52","hashOfConfig":"43"},{"size":3730,"mtime":1647262444243,"results":"53","hashOfConfig":"43"},{"size":1512,"mtime":1647262350213,"results":"54","hashOfConfig":"43"},{"size":5241,"mtime":1647262516015,"results":"55","hashOfConfig":"43"},{"size":359,"mtime":1646079371488,"results":"56","hashOfConfig":"43"},{"size":209,"mtime":1646079708323,"results":"57","hashOfConfig":"43"},{"size":3564,"mtime":1647207245408,"results":"58","hashOfConfig":"43"},{"size":1211,"mtime":1646873220464,"results":"59","hashOfConfig":"43"},{"size":290,"mtime":1646872904942,"results":"60","hashOfConfig":"43"},{"size":1218,"mtime":1646576704266,"results":"61","hashOfConfig":"43"},{"size":3532,"mtime":1647122388728,"results":"62","hashOfConfig":"43"},{"size":1495,"mtime":1647109073915,"results":"63","hashOfConfig":"43"},{"size":2284,"mtime":1646424340208,"results":"64","hashOfConfig":"43"},{"size":6405,"mtime":1647129126709,"results":"65","hashOfConfig":"43"},{"size":336,"mtime":1646358400192,"results":"66","hashOfConfig":"43"},{"size":3677,"mtime":1646449143811,"results":"67","hashOfConfig":"43"},{"size":5775,"mtime":1647135329123,"results":"68","hashOfConfig":"43"},{"size":2682,"mtime":1646881182666,"results":"69","hashOfConfig":"43"},{"size":1448,"mtime":1646881143848,"results":"70","hashOfConfig":"43"},{"size":1191,"mtime":1646881026092,"results":"71","hashOfConfig":"43"},{"size":4233,"mtime":1646967048109,"results":"72","hashOfConfig":"43"},{"size":3610,"mtime":1647227530354,"results":"73","hashOfConfig":"43"},{"size":1275,"mtime":1647009809418,"results":"74","hashOfConfig":"43"},{"size":5110,"mtime":1647228649304,"results":"75","hashOfConfig":"43"},{"size":7419,"mtime":1647230915231,"results":"76","hashOfConfig":"43"},{"size":2777,"mtime":1647116395152,"results":"77","hashOfConfig":"43"},{"size":3578,"mtime":1647133813810,"results":"78","hashOfConfig":"43"},{"size":4088,"mtime":1647193957171,"results":"79","hashOfConfig":"43"},{"size":799,"mtime":1647140694605,"results":"80","hashOfConfig":"43"},{"size":6020,"mtime":1647189951059,"results":"81","hashOfConfig":"43"},{"size":2527,"mtime":1647219852531,"results":"82","hashOfConfig":"43"},{"size":1199,"mtime":1647272800495,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1pltnug",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ammar/Desktop/CS50/myShop/frontend/src/index.js",[],["175","176"],"/home/ammar/Desktop/CS50/myShop/frontend/src/App.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/reportWebVitals.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/HomeScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/Header.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/Footer.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/Product.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/Rating.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProductScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/store.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/productReducers.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/constants/productConstants.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/actions/productActions.js",["177"],"import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProducts =\n  (keyword = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(`/api/products${keyword}`);\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top/`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/products/delete/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/update/${product._id}`,\n      product,\n      config\n    );\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/products/${productId}/reviews/`,\n        review,\n        config\n      );\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Loading.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/Message.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/CartScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/cartReducers.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/constants/cartConstants.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/actions/cartActions.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/userReducers.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/constants/userConstants.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/LoginScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/actions/userActions.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/FormContainer.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/RegisterScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProfileScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ShippingScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/PaymentScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/components/CheckoutSteps.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/PlaceOrderScreen.js",["178"],"import React, { useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from '../components/Message';\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\n\nconst PlaceOrderScreen = ({ history }) => {\n\tconst orderCreate = useSelector(state => state.orderCreate)\n\tconst {order, error, success} = orderCreate\n\n\tconst dispatch = useDispatch()\n\n\tconst cart = useSelector(state => state.cart)\n\n\tcart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n\tcart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n\tcart.taxPrice = Number((0.06) * cart.itemsPrice).toFixed(2)\n\tcart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n \n\tif(!cart.paymentMethod) {\n\t\thistory.push('/payment')\n\t}\n\n\tuseEffect(() => {\n\t\tif(success){\n\t\t\thistory.push(`/order/${order._id}`)\n\t\t\tdispatch({type: ORDER_CREATE_RESET})\n\t\t}\n\t}, [dispatch, success, history])\n\n\tconst placeOrder = () => {\n\t\tdispatch(createOrder({\n\t\t\torderItems:cart.cartItems,\n\t\t\tshippingAddress: cart.shippingAddress,\n\t\t\tpaymentMethod: cart.paymentMethod,\n\t\t\titemsPrice: cart.itemsPrice,\n\t\t\tshippingPrice: cart.shippingPrice,\n\t\t\ttaxPrice: cart.taxPrice,\n\t\t\ttotalPrice: cart.totalPrice,\n\t\t}))\n\t}\n  return (\n\t\t<div>\n\t\t\t<CheckoutSteps step1 step2 step3 step4/>\n\t\t\t<Row>\n\t\t\t\t<Col md={8}>\n\t\t\t\t\t<ListGroup variant=\"flush\">\n\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Shipping</h2>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Shipping: </strong>\n\t\t\t\t\t\t\t\t{cart.shippingAddress.address}, {cart.shippingAddress.city}\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t{cart.shippingAddress.postalCode}\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t{cart.shippingAddress.country}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Method: </strong>\n\t\t\t\t\t\t\t\t{cart.paymentMethod}\t\t\t\t\t\t\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Order Items</h2>\n\t\t\t\t\t\t\t{cart.cartItems.legnth === 0 ? <Message variant='info'>\n\t\t\t\t\t\t\t\tYour cart is empty\n\t\t\t\t\t\t\t</Message> : (\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t\t{cart.cartItems.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Image src={item.image} alt={item.name} fluid rounded/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col> \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${item.product}`} style={{color: \"white\", textDecoration: \"none\"}}>{item.name}</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<h2>OrderSummery</h2>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Item:</Col>\n\t\t\t\t\t\t\t\t\t<Col>${cart.itemsPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Shipping:</Col>\n\t\t\t\t\t\t\t\t\t<Col>${cart.shippingPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Tax:</Col>\n\t\t\t\t\t\t\t\t\t<Col>${cart.taxPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Total:</Col>\n\t\t\t\t\t\t\t\t\t<Col>${cart.totalPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t\t<ListGroup.Item>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t    {error && <Message variant='danger'>{error}</Message>}\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<div className=\"d-grid gap-2\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={cart.cartItems === 0}\n\t\t\t\t\t\t\t\t\t\tonClick={placeOrder}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPlace Order\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t)\n};\n\nexport default PlaceOrderScreen;\n","/home/ammar/Desktop/CS50/myShop/frontend/src/reducers/orderReducers.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/constants/orderConstants.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/actions/orderActions.js",["179","180","181"],"import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_USER_REQUEST,\n  ORDER_LIST_USER_SUCCESS,\n  ORDER_LIST_USER_FAIL,\n  ORDER_LIST_USER_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/orders/add/\", order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    });\n\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/delivered/`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listUserOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_USER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/userorders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_USER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_USER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/OrderScreen.js",["182"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AYhA1RXrIy58ZBTg0d67drHkahl5gL0YZWFdH8-NNWIBXA5_PpQRawZ3_IidNzobubyg_6tcv-1uRFs2\";\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loading />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h2>Order #: {orderId}</h2>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>{order.user.name} \n              </p>\n              <p>\n                <strong>\n                  Email:{\" \"}\n                </strong>\n\n                  <a\n                    href={`mailTo:${order.user.email}`}\n                  >\n                    {order.user.email}\n                  </a>{\" \"}\n              </p>\n\n              <p>\n                <strong>Shipping: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                {order.shippingAddress.postalCode}{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}{\" \"}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not delivered yet</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt} </Message>\n              ) : (\n                <Message variant=\"warning\">Not paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.legnth === 0 ? (\n                <Message variant=\"info\">Your order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link\n                            to={`/product/${item.product}`}\n                          >\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summery</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Item:</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loading />}\n\n                  {!sdkReady ? (\n                    <Loading />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n            {loadingDeliver && <Loading />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default OrderScreen;\n","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/UserListScreen.js",["183"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n\t\t\t\t\t\t\t<th>USERNAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n\t\t\t\t\t\t\t\t<td>{user.username}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default UserListScreen;\n","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/UserEditScreen.js",["184"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setUsername(user.username);\n\t\t\t\tsetEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: user._id, name, username, email, isAdmin }));\n  };\n  return (\n    <div>\n      <Link to=\"/admin/userlist\" style={{color: \"white\"}}>Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loading />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loading />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"username\"\n                placeholder=\"Enter Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default UserEditScreen;\n","/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProductListScreen.js",["185"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nconst ProductListScreen = ({ match, history }) => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete || {});\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate || {});\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loading />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loading />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductListScreen;\n","/home/ammar/Desktop/CS50/myShop/frontend/src/components/Paginate.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/ProductEditScreen.js",[],"/home/ammar/Desktop/CS50/myShop/frontend/src/screens/OrderListScreen.js",["186"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>Total</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default OrderListScreen;\n","/home/ammar/Desktop/CS50/myShop/frontend/src/components/ProductCarousel.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":108,"column":13,"nodeType":"193","messageId":"194","endLine":108,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":32,"column":5,"nodeType":"197","endLine":32,"endColumn":33,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"199","line":12,"column":3,"nodeType":"193","messageId":"194","endLine":12,"endColumn":18},{"ruleId":"191","severity":1,"message":"200","line":16,"column":3,"nodeType":"193","messageId":"194","endLine":16,"endColumn":24},{"ruleId":"191","severity":1,"message":"201","line":23,"column":3,"nodeType":"193","messageId":"194","endLine":23,"endColumn":22},{"ruleId":"195","severity":1,"message":"202","line":70,"column":6,"nodeType":"197","endLine":70,"endColumn":60,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"204","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"205","line":45,"column":6,"nodeType":"197","endLine":45,"endColumn":44,"suggestions":"206"},{"ruleId":"191","severity":1,"message":"204","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"204","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["209"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_USER_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["210"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [dispatch, success, history, order._id]",{"range":"218","text":"219"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"220","text":"221"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"222","text":"223"},[1187,1215],"[dispatch, success, history, order._id]",[2197,2251],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1459,1497],"[user, userId, successUpdate, history, dispatch]"]